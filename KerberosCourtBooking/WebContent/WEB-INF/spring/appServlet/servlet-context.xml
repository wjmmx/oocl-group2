<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">


	<!-- DispatcherServlet Context: defines the servlet's request-processing 
		infrastructure -->
	<context:component-scan base-package="com.oocl.kb.*" />

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->

	<!-- Replaces Home Controller class -->
	<mvc:view-controller path="/" view-name="admin" />

	<!-- Admin page -->
	<mvc:resources mapping="/adminview/**" location="/admin/" />
	<mvc:resources mapping="/app/**" location="/admin/app/" />
	<mvc:resources mapping="/controller/**" location="/admin/app/controller/*.js" />
	<mvc:resources mapping="/model/**" location="/admin/app/model/*.js" />
	<mvc:resources mapping="/store/**" location="/admin/app/store/*.js" />
	<mvc:resources mapping="/view/**" location="/admin/app/view/*.js" />
	<mvc:resources mapping="/resources/img/**" location="/admin/resources/images/*.png" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- Instead of creating beans by declaring it in the XML Configuration 
		file, annotations will do this. -->
	<tx:annotation-driven />

	<!-- Beans for DAO Implementation -->
	<beans:bean id="userDAO" class="com.oocl.kb.dao.impl.UserDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

	<!-- Beans for SVC Implementation -->
	<beans:bean id="userSVC" class="com.oocl.kb.svc.impl.UserSVCImpl">
		<beans:property name="userDAO" ref="userDAO"></beans:property>
	</beans:bean>


	<!-- Beans for Data source connection -->
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<beans:property name="url"
			value="jdbc:oracle:thin:@ZHA-ITA129-W7:1521/xe" />
		<beans:property name="username" value="user_jag" />
		<beans:property name="password" value="admin" />
	</beans:bean>

	<!-- Bean for Session Factory -->
	<beans:bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" scope="prototype">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.oocl.kb.model.User</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<context:component-scan base-package="com.oocl.kb" />
	<tx:annotation-driven transaction-manager="transactionManager" />
	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>


</beans>
