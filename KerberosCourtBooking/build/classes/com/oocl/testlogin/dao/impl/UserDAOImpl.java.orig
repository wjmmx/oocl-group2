package com.oocl.testlogin.dao.impl;

import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.oocl.testlogin.dao.inf.UserDAO;
import com.oocl.testlogin.model.User;

<<<<<<< HEAD
@Component
=======
//@Repository
//@Transactional
>>>>>>> 7a02129f446c0ab6679af46d731a3dc75fef2610
public class UserDAOImpl implements UserDAO {

	@Autowired
	SessionFactory sessionFactory;
	Session session;
	Transaction tx;

	@Override
	public void setSessionFactory(SessionFactory sessionFactory) {
		this.sessionFactory = sessionFactory;
	}

	@Override
	public int validateUser(String username, String password) {
		int validate = 0;
		Session session = sessionFactory.openSession();
		tx = session.beginTransaction();
		Query query = session.createQuery("select count(username) FROM User where username = ? and password = ? ");
		query.setParameter(0, username);
		query.setParameter(1, password);
		tx.commit();
		validate = Integer.parseInt(query.uniqueResult().toString());
		session.close();
		return validate;
	}

	@Override
	public User getUserDetails(String username, String password) {
		User user = null;
		Session session = sessionFactory.openSession();
		tx = session.beginTransaction();
		Query query = session.createQuery("FROM User where username = ? and password = ? ");
		query.setParameter(0, username);
		query.setParameter(1, password);
		tx.commit();
		user = (User) query.uniqueResult();
		session.close();
		return user;
	}

}
